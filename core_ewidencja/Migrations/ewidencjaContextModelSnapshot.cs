// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using core_ewidencja.Models;

namespace core_ewidencja.Migrations
{
    [DbContext(typeof(ewidencjaContext))]
    partial class ewidencjaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("core_ewidencja.Models.CzynnosciPojazdy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdPojazdu")
                        .HasColumnName("id_pojazdu");

                    b.Property<int?>("IdVehicle")
                        .HasColumnName("id_vehicle");

                    b.Property<string>("OpisCzynnosci")
                        .HasColumnName("opis_czynnosci")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Przebieg")
                        .HasColumnName("przebieg")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("czynnosciPojazdy");
                });

            modelBuilder.Entity("core_ewidencja.Models.TblStats", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int?>("Counter")
                        .HasColumnName("counter");

                    b.Property<DateTime?>("DateVisited")
                        .HasColumnName("date_visited")
                        .HasColumnType("datetime");

                    b.Property<string>("Page")
                        .HasColumnName("page")
                        .HasMaxLength(420);

                    b.Property<string>("VisitHostIp")
                        .HasColumnName("visit_host_ip")
                        .HasMaxLength(400);

                    b.HasKey("Id");

                    b.ToTable("tblStats");
                });

            modelBuilder.Entity("core_ewidencja.Models.TblUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int?>("Active")
                        .HasColumnName("active");

                    b.Property<DateTime?>("AddedDate")
                        .HasColumnName("added_date")
                        .HasColumnType("date");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(900)
                        .IsUnicode(false);

                    b.Property<int?>("TypeUser")
                        .HasColumnName("type_user");

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasMaxLength(490)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("tblUsers");
                });

            modelBuilder.Entity("core_ewidencja.Models.TblWaluty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<decimal?>("AudValue")
                        .HasColumnName("aud_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("BgnValue")
                        .HasColumnName("bgn_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("BrlValue")
                        .HasColumnName("brl_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("CadValue")
                        .HasColumnName("cad_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("ChfValue")
                        .HasColumnName("chf_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("CnyValue")
                        .HasColumnName("cny_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("CzkValue")
                        .HasColumnName("czk_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("DkkValue")
                        .HasColumnName("dkk_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("GbpValue")
                        .HasColumnName("gbp_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("HkdValue")
                        .HasColumnName("hkd_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("HrkValue")
                        .HasColumnName("hrk_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("HufValue")
                        .HasColumnName("huf_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("IdrValue")
                        .HasColumnName("idr_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("IlsValue")
                        .HasColumnName("ils_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("InrValue")
                        .HasColumnName("inr_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<DateTime?>("InsDate")
                        .HasColumnName("ins_date")
                        .HasColumnType("date");

                    b.Property<decimal?>("IskValue")
                        .HasColumnName("isk_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("JpyValue")
                        .HasColumnName("jpy_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("KrwValue")
                        .HasColumnName("krw_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("MxnValue")
                        .HasColumnName("mxn_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("MyrValue")
                        .HasColumnName("myr_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("NokValue")
                        .HasColumnName("nok_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("NzdValue")
                        .HasColumnName("nzd_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("PhpValue")
                        .HasColumnName("php_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("PlnValue")
                        .HasColumnName("pln_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("RonValue")
                        .HasColumnName("ron_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("RubValue")
                        .HasColumnName("rub_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("SekValue")
                        .HasColumnName("sek_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("SgdValue")
                        .HasColumnName("sgd_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("ThbValue")
                        .HasColumnName("thb_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("TryValue")
                        .HasColumnName("try_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("UsdValue")
                        .HasColumnName("usd_value")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal?>("ZarValue")
                        .HasColumnName("zar_value")
                        .HasColumnType("decimal(10, 6)");

                    b.HasKey("Id");

                    b.ToTable("tblWaluty");
                });

            modelBuilder.Entity("core_ewidencja.Models.TblZuzycieEnergii", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("DATA")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdUser")
                        .HasColumnName("id_user");

                    b.Property<decimal?>("Kwh")
                        .HasColumnName("kwh")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<decimal?>("WskLicznika")
                        .HasColumnName("wsk_licznika")
                        .HasColumnType("decimal(8, 2)");

                    b.HasKey("Id");

                    b.ToTable("tblZuzycieEnergii");
                });

            modelBuilder.Entity("core_ewidencja.Models.TblZuzycieGazu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("DATA")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Kwh")
                        .HasColumnName("kwh")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<decimal?>("WskLicznika")
                        .HasColumnName("wsk_licznika")
                        .HasColumnType("decimal(8, 2)");

                    b.HasKey("Id");

                    b.ToTable("tblZuzycieGazu");
                });

            modelBuilder.Entity("core_ewidencja.Models.TblZuzycieWody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<decimal?>("WskLicznika")
                        .HasColumnName("wsk_licznika")
                        .HasColumnType("decimal(10, 6)");

                    b.HasKey("Id");

                    b.ToTable("tblZuzycieWody");
                });
#pragma warning restore 612, 618
        }
    }
}
